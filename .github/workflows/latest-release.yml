name: "Release Latest"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  testing:
    name: "Testing"
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/my_actions/conda-setup
        with:
          env_name: gpiowrapper
          env_file_path: testing_environment.yml
          python_version: 3.11

      - name: Test with pytest
        shell: bash -l {0}
        run: |
          conda activate gpiowrapper
          pytest --junitxml=junit/test-results-ubuntu-latest-py3.11.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-ubuntu-latest-py3.11
          path: junit/test-results-ubuntu-latest-py3.11.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

  building:
    name: "Building"
    runs-on: "ubuntu-latest"
    needs: testing

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build

  release-latest:
    name: "Release Latest"
    runs-on: "ubuntu-latest"
    needs: building

    steps:
      - uses: actions/checkout@v4

      - name: Create latest Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
