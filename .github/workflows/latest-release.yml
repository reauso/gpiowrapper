name: "Main Push Or PullRequest"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  setup:
#    name: "Setup"
#    runs-on: "ubuntu-latest"
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up Conda For Testing
#        uses: conda-incubator/setup-miniconda@v3
#        with:
#          conda-solver: libmamba
#          activate-environment: gpiowrapper
#          environment-file: testing_environment.yml
#          python-version: 3.11
#          auto-activate-base: True

  testing:
    name: "Testing"
    runs-on: "ubuntu-latest"
    needs: setup

    steps:
      - uses: actions/checkout@v4
      - uses: ./conda-setup@v1

      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest --junitxml=junit/test-results-ubuntu-latest-py3.11.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-ubuntu-latest-py3.11
          path: junit/test-results-ubuntu-latest-py3.11.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

  building:
    name: "Building"
    runs-on: "ubuntu-latest"
    needs: testing

    steps:
      - uses: actions/checkout@v4

      - name: Build
        shell: bash -l {0}
        run: |
          conda activate gpiowrapper
          pip install build
          python -m build

  release-latest:
    name: "Release Latest"
    runs-on: "ubuntu-latest"
    needs: building

    steps:
      - uses: actions/checkout@v4

      - name: Create Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
#          files: |
#            LICENSE