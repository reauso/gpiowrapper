name: Testing

on: [push, pull_request]

jobs:
  testing:
    name: Miniconda ${{ matrix.os }} Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Edit testing_environment.yml file
        shell: bash -l {0}
        run: |
          sed -i 's/  - python=3.11//' testing_environment.yml

      - name: Set up Conda with Python ${{ matrix.python-version }} and dependencies
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: gpiowrapper
          environment-file: testing_environment.yml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: True

      - name: Print Conda Information
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest --junitxml=junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
